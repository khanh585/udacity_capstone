version: "2.1"
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.2
  aws-cli: circleci/aws-cli@3.1.1

executors:
  hadolint_executor:
    parameters:
      tag:
        type: string
        default: "v1.6.6-6-g254b4ff"
    docker:
      - image: hadolint/hadolint:<<parameters.tag>>

commands:
  run_dockerfile_lint:
    steps:
      - checkout
      - run:
          name: Dockerfile Lint
          command: |
            hadolint ./docker/blue/Dockerfile

jobs:
  run-lint:
    executor: hadolint_executor
    steps:
      - run_dockerfile_lint

  build-push-blue-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/build:
          path: ./docker/blue
          image: khanh585/blue
          tag: "1.0"
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PW
      - docker/push:
          image: khanh585/blue
          tag: "1.0"
  build-push-green-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/build:
          path: ./docker/green
          image: khanh585/green
          tag: "1.0"
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PW
      - docker/push:
          image: khanh585/green
          tag: "1.0"
  deploy-eks:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-cli/setup
      - aws-eks/create-cluster:
          cluster-name: eks-capstone
          nodegroup-name: eks-capstone-nodes
          node-type: t2.micro
          nodes-min: 2
          nodes-max: 3

  deploy-application-blue:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-capstone
          install-kubectl: true
      - run:
          name: Test kubectl
          command: |  
            kubectl get services
            kubectl get nodes
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: ".circleci/files/blue/deployment.yml"
          resource-name: deployment/blue
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/blue/service.yml"
          show-kubectl-command: true
      - run:
          name: get deployment status
          command: kubectl get svc bluegreenlb

  deploy-application-green:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-capstone
          install-kubectl: true
      - run:
          name: Test kubectl
          command: |  
            kubectl get services
            kubectl get nodes
      - run:
          name: Test Load Balancer endpoint
          command: |
            sleep 300
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: ".circleci/files/green/deployment.yml"
          resource-name: deployment/green
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/green/service.yml"
          show-kubectl-command: true
      - run:
          name: get deployment status
          command: kubectl get svc bluegreenlb

workflows:
  deployment:
    jobs:
      - run-lint
      - build-push-blue-image:
          requires: [run-lint]
      - build-push-green-image:
          requires: [run-lint]
      - deploy-eks
      - deploy-application-blue:
          requires: [deploy-eks]
      - deploy-application-green:
          requires: [deploy-application-blue]
